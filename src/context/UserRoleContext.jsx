import React, { createContext, useContext, useState, useEffect } from 'react';import { auth } from '../firebase/firebase';import { getUserRole } from '../firebase/firestoreService';import { useAuthState } from 'react-firebase-hooks/auth';const UserRoleContext = createContext({  userRole: 'fuser',   isAdmin: false,  isPaidUser: false,  isFreeUser: true,  loading: true,});export const useUserRole = () => useContext(UserRoleContext);export const UserRoleProvider = ({ children }) => {  const [user, authLoading] = useAuthState(auth);  const [userRole, setUserRole] = useState('fuser');  const [loading, setLoading] = useState(true);  useEffect(() => {    const fetchUserRole = async () => {      if (!authLoading) {        if (user) {          try {            const role = await getUserRole(user.uid);            setUserRole(role);          } catch (error) {            console.error('Lỗi khi lấy vai trò người dùng:', error);            setUserRole('fuser');           }        } else {          setUserRole('fuser');         }        setLoading(false);      }    };    fetchUserRole();  }, [user, authLoading]);  const isAdmin = userRole === 'admin';  const isPaidUser = userRole === 'puser';  const isFreeUser = userRole === 'fuser';  const value = {    userRole,    isAdmin,    isPaidUser,    isFreeUser,    loading: authLoading || loading,  };  return (    <UserRoleContext.Provider value={value}>      {children}    </UserRoleContext.Provider>  );};export default UserRoleContext;